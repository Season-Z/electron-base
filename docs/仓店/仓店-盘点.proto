syntax = "proto3";

package com.ypsx.ylp.proto.stocktake.service;


message CodeInfo{
    int32 code = 1;
    string msg = 2;
}

message PlanQueryAO {
    //货主ID
    int64 companyId = 1;
    //货主名称
    string companyName = 2;
    //仓库ID
    int64 placeId = 3;
    //盘点类型
    int64 stocktakeType = 4;
    //标示
    int64 enableStatus = 5;
    //盘点计划描述
    string stocktakePlanDesc = 6;
    //开始时间
    string beginTime = 7;
    //结束时间
    string endTime = 8;
    //页面大小
    int64 pageSize = 9;
    //第几页
    int64 pageNum = 10;
}

message PlanPageVO {
    repeated PlanDTO list = 1;
    PageInv pageInfo = 2;
    CodeInfo codeInfo = 3;
}

message PlanDTO {
    //盘点计划ID
    int64 id = 1;
    //货主ID
    int64 companyId = 2;
    //货主名称
    string companyName = 3;
    //仓库ID
    int64 placeId = 4;
    //盘点计划号
    string stocktakePlanCode = 5;
    //盘点计划描述
    string stocktakePlanDesc = 6;
    //盘点类型
    int64 stocktakeType = 7;
    //盘点标示
    int64 enableStatus = 8;
    //是否盲盘
    int64 blindSetting = 9;
    //创建人
    string creator = 10;
    //创建时间
    string createTime = 11;
}

message PlanEditAO {
    //盘点计划ID
    int64 id = 1;
    //仓库ID
    int64 placeId = 2;
    //货主ID
    int64 companyId = 3;
    //操作人
    string operator = 4;
}

message PlanResponse {
    int32 code = 1;
    string message = 2;
    string errorMsg = 3;
    PlanVO data = 4;
    CodeInfo codeInfo = 5;
}

message StocktakeBaseResponse {
    int32 code = 1;
    string message = 2;
    string errorMsg = 3;
    CodeInfo codeInfo = 4;
}

message PlanVO {
    //盘点计划ID
    int64 id = 1;
    //货主ID
    int64 companyId = 2;
    //货主名称
    string companyName = 3;
    //仓库ID
    int64 placeId = 4;
    //盘点计划号
    string stocktakePlanCode = 5;
    //盘点计划描述
    string stocktakePlanDesc = 6;
    //盘点类型
    int64 stocktakeType = 7;
    //盘点标示
    int64 enableStatus = 8;
    //是否盲盘
    int64 blindSetting = 9;
    //操作人
    string operator = 10;
    //优先级
    int64 priority = 11;
    //零库存
    int64 zeroStockSetting = 12;
    //实时库存
    int64 realtimeStockSetting = 13;
    PlanRequire planRequire = 14;
}

message PlanRequire {
    //是否全部商品
    int64 allProduct = 1;
    //要过滤的商品code列表
    repeated string skuList = 2;
    //要过滤的类目列表
    repeated string categoryList = 3;
    //储位类型
    repeated string locationTypeList = 4;
    //要过滤的储位编码列表
    repeated string locationCodeList = 5;
    //库区
    repeated string zoneCodeList = 6;
    //巷道
    repeated string aisleList=7;
}

/**
** 创建后者更新盘点model
**/
message PlanUpdateAO {
    //盘点计划ID
    int64 id = 1;
    //货主ID
    int64 companyId = 2;
    //货主名称
    string companyName = 3;
    //仓库ID
    int64 placeId = 4;
    //盘点计划号
    string stocktakePlanCode = 5;
    //盘点计划描述
    string stocktakePlanDesc = 6;
    //盘点类型
    int64 stocktakeType = 7;
    //盘点标示
    int64 enableStatus = 8;
    //是否盲盘
    int64 blindSetting = 9;
    //操作人
    string operator = 10;
    //优先级
    int64 priority = 11;
    //零库存
    int64 zeroStockSetting = 12;
    //实时库存
    int64 realtimeStockSetting = 13;
    //盘点对象属性
    PlanRequire planRequire = 14;
    //商品盘点还是储位盘点
    int64 stocktakeTargetType = 15;
}

message PlanExecuteAO {
    //盘点计划ID
    int64 id = 1;
    //仓库ID
    int64 placeId = 2;
    //货主ID
    int64 companyId = 3;
    //操作人
    string operator =4;
}


message errorMsg {
    int32 code = 1;
    string msg = 2;
}

message PageInv {
    int64 pageNum = 1;
    int64 pageSize = 2;
    int64 total = 3;
}

message OrderQueryAO {
    //货主ID
    int64 companyId = 1;
    //地点ID
    int64 placeId = 2;
    //盘点单号
    string stocktakeOrderCode = 3;
    //盘点类型
    int64 stocktakeType = 4;
    //盘点单状态
    int64 stocktakeOrderStatus = 5;
    //盘点计划号
    string stocktakePlanCode = 6;
    //开始时间
    string beginTime = 7;
    //结束时间
    string endTime = 8;
    //页面大小
    int64 pageSize = 9;
    //第几页
    int64 pageNum = 10;
    //状态列表
    repeated int64 statusList = 11;
}

message OrderPageVO {
    repeated OrderDTO list = 1;
    PageInv pageInfo = 2;
    CodeInfo codeInfo = 3;
}

message OrderDTO {
    //盘点单ID
    int64 id = 1;
    //地点ID
    int64 placeId = 2;
    //货主ID
    int64 companyId = 3;
    //货主名称
    string companyName = 4;
    //盘点单号
    string stocktakeOrderCode = 5;
    //盘点计划号
    string stocktakePlanCode = 6;
    //盘点计划描述
    string stocktakePlanDesc = 7;
    //盘点类型
    int64 stocktakeType = 8;
    //盘点单状态
    int64 stocktakeOrderStatus = 9;
    //创建时间
    string createTimeStr = 10;
    //创建人
    string creator = 11;
    //更新时间
    string modifyTimeStr = 12;
    //更新人
    string modifier = 13;
}

message OrderExecuteAO {
    //盘点计划单ID
    int64 id = 1;
    //仓库ID
    int64 placeId = 2;
    //货主ID
    int64 companyId = 3;
    //操作人
    string operator = 4;
}

message OrderCloseAO {
    //盘点单ID
    int64 id = 1;
    //仓库ID
    int64 placeId = 2;
    //货主ID
    int64 companyId = 3;
}

message OrderAdjustAO {
    //盘点单ID
    int64 id = 1;
    //仓库ID
    int64 placeId = 2;
    //货主ID
    int64 companyId = 3;
}

message OrderSimpleAO {
    //盘点单ID
    int64 id = 1;
    //仓库ID
    int64 placeId = 2;
    //货主ID
    int64 companyId = 3;
}

message OrderSimpleVO {
    //盘点单ID
    int64 id = 1;
    //地点ID
    int64 placeId = 2;
    //货主ID
    int64 companyId = 3;
    //货主名称
    string companyName = 4;
    //盘点单号
    string stocktakeOrderCode = 5;
    //盘点计划号
    string stocktakePlanCode = 6;
    //盘点计划描述
    string stocktakePlanDesc = 7;
    //盘点类型
    int64 stocktakeType = 8;
    //盘点单状态
    int64 stocktakeOrderStatus = 9;
    //创建时间
    string createTimeStr = 10;
    //创建人
    string creator = 11;
    //更新时间
    string modifyTimeStr = 12;
    //更新人
    string modifier = 13;

    CodeInfo codeInfo = 14;
}

message OrderDetailPageAO {
    //盘点单ID
    int64 id = 1;
    //仓库ID
    int64 placeId = 2;
    //货主ID
    int64 companyId = 3;
    //盘点单号
    string stocktakeOrderCode = 4;
    //盘点明细状态
    int64 stocktakeDetailStatus = 5;
    //商品编码,以换行分隔
    repeated string skuCodeList = 6;
    //商品名称
    string skuName = 7;
    //储位编码列表
    repeated string locationCodeList = 8;
    //是否差异单
    int64 difference = 9;
    //初盘差异下限
    string firstCheckNumBegin = 10;
    //初盘差异上限
    string firstCheckNumEnd = 11;
    //初盘金额下限
    string firstCheckDifferenceAmountBegin = 12;
    //初盘金额上限
    string firstCheckDifferenceAmountEnd = 13;
    //页面大小
    int64 pageSize = 14;
    //第几页
    int64 pageNum = 15;
    //单个skuCode
    string skuCode = 16;
    //单个locationCode
    string locationCode=17;
    //状态列表
    int64 statusOuter = 18;
    //库区
    string zone = 19;
    //巷道
    string aisle = 20;
}

message OrderDetailPageVO {
    repeated OrderDetailDTO list = 1;
    PageInv pageInfo = 2;
    //差异总金额
    string totalAmount = 3;
    //差异数量
    string totalNum = 4;
    //差异品项
    string totalDetailNum = 5;
    //盘点计划设置
    PlanSetting planSetting = 6;
    CodeInfo codeInfo = 7;
}

message OrderDetailNumAO {
    //仓库ID
    int64 placeId = 1;
    //货主ID
    int64 companyId = 2;
    //盘点单号
    string stocktakeOrderCode = 3;
    //盘点明细状态
    int64 stocktakeDetailStatus = 4;
}


message OrderUpdateStatusAO {
    int64 id =1;
    //仓库ID
    int64 placeId = 2;
    //状态
    int64 stocktakeDetailStatus =3;
}

message OrderDetailNumVO{
    //总数
    int64 totalNum=1;
    //已完成数量
    int64 endNum=2;

    CodeInfo codeInfo = 3;
}

message PlanSetting{
    //是否盲盘
    int64 blindSetting = 1;
    //优先级
    int64 priority = 2;
    //零库存
    int64 zeroStockSetting = 3;
    //实时库存
    int64 realtimeStockSetting = 4;
}

message OrderDetailExportVO {
    //导出文件地址 todo
    string url = 1;
}

message OrderDetailDTO {
    //盘点单详情ID
    int64 id = 1;
    //商品ID
    int64 skuId = 2;
    //商品编码
    string skuCode = 3;
    //商品名称
    string skuName = 4;
    //商品条码
    string goodsBarcode = 5;
    //商品规格
    string skuSpec = 6;
    //商品单位
    string skuUnit = 7;
    //储位code
    string locationCode = 8;
    //盘点明细状态
    int64 stocktakeDetailStatus = 9;
    //初盘库存
    string firstCheckStock = 10;
    //初盘数量
    string firstCheckNum = 11;
    //初盘差异
    string firstCheckDifference = 12;
    //初盘差异金额
    string firstCheckDifferenceAmount = 13;
    //初盘人
    string firstChecker = 14;
    //是否称重商品  是否称重 1不称重 2称重
    int32 isWeight = 15;
    //是否生鲜商品
    int32 isFresh = 16;
    //库位
    string zoneCode=17;
    //库位名称
    string zoneName=18;
    //巷道
    string aisle=19;
}

message CloseTaskAO {
    repeated CloseTaskDTO list = 1;
}

message CloseTaskDTO {
    //盘点单详情ID
    int64 id = 1;
    //仓库ID
    int64 placeId = 2;
    //货主ID
    int64 companyId = 3;
}


message EditTaskAO {
    repeated EditTaskDTO list = 1;
}

message EditTaskDTO {
    //盘点单详情ID
    int64 id = 1;
    //仓库ID
    int64 placeId = 2;
    //货主ID
    int64 companyId = 3;
    //初盘数量
    string firstCheckNum = 4;
}

message EditTaskVO {
    //是否成功 200成功
    int32 code = 1;
    //错误码
    string message = 2;
    //详细错误信息
    string errorMsg = 3;
    //返回编辑后数据库记录
    repeated EditTaskResult list = 4;

    CodeInfo codeInfo = 5;
}

message EditTaskResult {
    //盘点单详情ID
    int64 id = 1;
    //商品ID
    int64 skuId = 2;
    //商品编码
    string skuCode = 3;
    //商品名称
    string skuName = 4;
    //商品条码
    string goodsBarcode = 5;
    //商品规格
    string skuSpec = 6;
    //商品单位
    string skuUnit = 7;
    //储位code
    string locationCode = 8;
    //盘点明细状态
    int64 stocktakeDetailStatus = 9;
    //初盘库存
    string firstCheckStock = 10;
    //初盘数量
    string firstCheckNum = 11;
    //初盘差异
    string firstCheckDifference = 12;
    //初盘差异金额
    string firstCheckDifferenceAmount = 13;
    //初盘人
    string firstChecker = 14;
}

message AdjustQueryAO {
    //货主ID
    int64 companyId = 1;
    //货主名称
    string companyName = 2;
    //仓库ID
    int64 placeId = 3;
    //调整单类型
    int64 adjustType = 4;
    //调整单状态
    int64 adjustStatus = 5;
    //盘点调整单号
    string stocktakeAdjustOrderCode = 6;
    //盘点单号
    string stocktakeOrderCode = 7;
    //开始时间
    string beginTime = 8;
    //结束时间
    string endTime = 9;
    //页面大小
    int64 pageSize = 10;
    //第几页
    int64 pageNum = 11;
}

message AdjustQueryVO {
    repeated AdjustDTO list = 1;
    PageInv pageInfo = 2;
    CodeInfo codeInfo = 3;
}

message AdjustDTO {
    //盘点调整单ID
    int64 id = 1;
    //货主ID
    int64 companyId = 2;
    //货主名称
    string companyName = 3;
    //仓库ID
    int64 placeId = 4;
    //调整单号
    string stocktakeAdjustOrderCode = 5;
    //调整单类型
    int64 adjustType = 6;
    //调整单状态
    int64 adjustStatus = 7;
    //调整原因
    string adjustReasonMsg = 8;
    //创建人
    string creator = 9;
    //创建时间
    string createTimeStr = 10;
    //更新时间
    string modifyTimeStr = 11;
    //更新人
    string modifier = 12;
    //盘点单号
    string stocktakeOrderCode=13;
}

//取消调整单
message CancelAdjustAO {
    //盘点单详情ID
    int64 id = 1;
    //仓库ID
    int64 placeId = 2;
    //货主ID
    int64 companyId = 3;
}

//审核调整单
message VerifyAdjustAO {
    //调整单详情ID
    int64 id = 1;
    //仓库ID
    int64 placeId = 2;
    //货主ID
    int64 companyId = 3;
}

message AdjustSimpleAO {
    //调整单ID
    int64 id = 1;
    //仓库ID
    int64 placeId = 2;
    //货主ID
    int64 companyId = 3;
}

message RollStocktakeAO {
    //仓库ID
    int64 placeId = 1;
    //商品编码
    string skuCode = 2;
    //储位编码
    string locationCode = 3;
    //盘点单号
    string stocktakeOrderCode=4;
}

message AdjustSimpleVO {
    //盘点调整单ID
    int64 id = 1;
    //货主ID
    int64 companyId = 2;
    //货主名称
    string companyName = 3;
    //仓库ID
    int64 placeId = 4;
    //盘点单号
    string stocktakeOrderCode = 5;
    //调整单号
    string stocktakeAdjustOrderCode = 6;
    //调整单类型
    int64 adjustType = 7;
    //调整单状态
    int64 adjustStatus = 8;
    //调整原因
    string adjustReasonMsg = 9;
    //创建人
    string creator = 10;
    //创建时间
    string createTimeStr = 11;
    //更新时间
    string modifyTimeStr = 12;
    //更新人
    string modifier = 13;
    CodeInfo codeInfo = 14;
}

message AdjustDetailQueryAO {
    //货主ID
    int64 companyId = 1;
    //仓库ID
    int64 placeId = 2;
    //调整单单号
    string stocktakeAdjustOrderCode = 3;
    //页面大小
    int64 pageSize = 4;
    //第几页
    int64 pageNum = 5;
    //开始时间
    string beginTime=6;
    //结束时间
    string endTime =7;
    //调整单类型
    int64 adjustType=8;
}

message AdjustDetailQueryVO {
    repeated AdjustDetailDTO list = 1;
    PageInv pageInfo = 2;
    //差异总金额
    string totalAmount = 3;
    //差异数量
    string totalNum = 4;
    //差异品项
    string totalDetailNum = 5;
    CodeInfo codeInfo = 6;
}

message AdjustDetailDTO {
    //盘点调整单ID
    int64 id = 1;
    //货主ID
    int64 companyId = 2;
    //货主名称
    string companyName = 3;
    //仓库ID
    int64 placeId = 4;
    //商品编码
    string skuCode = 5;
    //商品名称
    string skuName = 6;
    //商品条码
    string goodsBarcode = 7;
    //商品单位
    string goodsSpec = 8;
    //储位编码
    string locationCode = 9;
    //容器编码
    string containerCode = 10;
    //生产日期
    string produceTime = 11;
    //调整数量
    string adjustNum = 12;
    //调整金额
    string adjustAmount = 13;
}

message LocationStocktakeQueryAO {
    //盘点单ID
    int64 id = 1;
    //仓库ID
    int64 placeId = 2;
}

message LocationStocktakeVO {
    //储位列表
    repeated LocationVO list = 1;
    CodeInfo codeInfo = 2;
}

message LocationVO{
    //储位编码
    string locationCode=1;
    //储位名称
    string locationName=2;
}


//接口服务
service StocktakeService {

    /**分页查询盘点计划**/
    rpc pageQueryPlan (PlanQueryAO) returns (PlanPageVO);

    /**查询单个盘点计划**/
    rpc queryPlanDetail (PlanEditAO) returns (PlanResponse);

    /**创建盘点计划**/
    rpc createPlan (PlanUpdateAO) returns (StocktakeBaseResponse);

    /**更新盘点计划**/
    rpc updatePlan (PlanUpdateAO) returns (StocktakeBaseResponse);

    /**根据盘点计划生成盘点单**/
    rpc executeOrder (OrderExecuteAO) returns (StocktakeBaseResponse);

    /**分页查询盘点单**/
    rpc pageQueryOrder (OrderQueryAO) returns (OrderPageVO);

    /**关闭盘点单**/
    rpc closeOrder (OrderCloseAO) returns (StocktakeBaseResponse);

    /**分页查询盘点单明细**/
    rpc pageQueryOrderDetail (OrderDetailPageAO) returns (OrderDetailPageVO);

    /**更新盘点单状态为 盘点中**/
    rpc updateOrderStatus(OrderUpdateStatusAO) returns (StocktakeBaseResponse);

    /**查询盘点单统计数量**/
    rpc queryOrderStatusNum (OrderDetailNumAO) returns (OrderDetailNumVO);

    /**查询单个盘点单**/
    rpc queryOrderSimple (OrderSimpleAO) returns (OrderSimpleVO);

    /**导出盘点明细**/
    rpc exportQueryOrderDetail (OrderDetailPageAO) returns (OrderDetailExportVO);

    /**关闭盘点任务**/
    rpc closeOrderTask (CloseTaskAO) returns (StocktakeBaseResponse);

    /**编辑盘点任务,累加**/
    rpc editOrderTask (EditTaskAO) returns (EditTaskVO);

    /**编辑盘点任务,修改数量**/
    rpc modifyOrderTask(EditTaskAO) returns (EditTaskVO);

    /**生成盘点调整单**/
    rpc executeAdjustOrder (OrderAdjustAO) returns (StocktakeBaseResponse);

    /**分页查询盘点调整单**/
    rpc pageQueryAdjustOrder (AdjustQueryAO) returns (AdjustQueryVO);

    /**作废盘点调整单**/
    rpc cancelAdjustOrder (CancelAdjustAO) returns (StocktakeBaseResponse);

    /**审核盘点调整单**/
    rpc verifyAdjustOrder (VerifyAdjustAO) returns (StocktakeBaseResponse);

    /**查询单个盘点调整单**/
    rpc queryAdjustSimple (AdjustSimpleAO) returns (AdjustSimpleVO);

    /**查询盘点调整单明细**/
    rpc pageQueryAdjustDetail (AdjustDetailQueryAO) returns (AdjustDetailQueryVO);

    /**储位查询**/
    rpc locationQuery (LocationStocktakeQueryAO)returns (LocationStocktakeVO);

    /**添加滚盘记录**/
    rpc rollStocktake(RollStocktakeAO) returns (StocktakeBaseResponse);
}